https://github.com/reactive-streams/reactive-streams-jvm

1.1
1.2
+   1.3     onSubscribe, onNext, onError and onComplete signaled to a Subscriber MUST be signaled serially.
+   1.4     If a Publisher fails it MUST signal an onError.
+   1.5     If a Publisher terminates successfully (finite stream) it MUST signal an onComplete.
+   1.6 	If a Publisher signals either onError or onComplete on a Subscriber, that Subscriber’s Subscription MUST be considered cancelled.
-   1.7     Once a terminal state has been signaled (onError, onComplete) it is REQUIRED that no further signals occur.
1.8
1.9
-   1.10    Publisher.subscribe MAY be called as many times as wanted but MUST be with a different Subscriber each time
1.11

+   2.1     A Subscriber MUST signal demand via Subscription.request(long n) to receive onNext signals.
-   2.2     If a Subscriber suspects that its processing of signals will negatively impact its Publisher´s responsivity, it is RECOMMENDED that it asynchronously dispatches its signals.
-   2.3     Subscriber.onComplete() and Subscriber.onError(Throwable t) MUST NOT call any methods on the Subscription or the Publisher.
+   2.4     Subscriber.onComplete() and Subscriber.onError(Throwable t) MUST consider the Subscription cancelled after having received the signal.
+   2.5     A Subscriber MUST call Subscription.cancel() on the given Subscription after an onSubscribe signal if it already has an active Subscription.
+   2.6     A Subscriber MUST call Subscription.cancel() if the Subscription is no longer needed.
2.7
2.8
-   2.9     A Subscriber MUST be prepared to receive an onComplete signal with or without a preceding Subscription.request(long n) call.
-   2.10    A Subscriber MUST be prepared to receive an onError signal with or without a preceding Subscription.request(long n) call.
2.11
2.12
2.13

-   3.1     Subscription.request and Subscription.cancel MUST only be called inside of its Subscriber context.
3.2
3.3
3.4
3.5
3.6
3.7
3.8
+   3.9     While the Subscription is not cancelled, Subscription.request(long n) MUST signal onError with a java.lang.IllegalArgumentException if the argument is <= 0.
3.10
3.11
3.12
3.13
-   3.14    While the Subscription is not cancelled, calling Subscription.cancel MAY cause the Publisher, if stateful, to transition into the shut-down state if no other Subscription exists at this point [see 1.9].
-   3.15    Calling Subscription.cancel MUST return normally.
-   3.16    Calling Subscription.request MUST return normally.
3.17
